# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# 初期起動shellをfishに
# for mac
if-shell "uname | grep -q Darwin" \
  'set-option -g default-shell /usr/local/bin/fish'
# for Linux
if-shell 'type xsel' \
  "set-option -g default-shell /usr/bin/fish"

# escをサクサクにお
set -s escape-time 0

# ------------------------------------------
# デザイン
# 参考：
# ------------------------------------------
# 256色表示の設定
set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'

# アクティブウィンドウを目立たせる
set -g window-style 'fg=colour22,bg=colour234'
set -g window-active-style 'fg=colour46,bg=colour0'


# ------------------------------------------
# ステータスバー設定
# 参考:https://qiita.com/b4b4r07/items/01359e8a3066d1c37edc
# 参考:https://qiita.com/arks22/items/a792d9d43d913c373520
# ------------------------------------------
# ステータスバーをトップに配置する
set-option -g status-position top
# ステータスバーを1秒毎に描画し直す
set-option -g status-interval 1
# センタライズ（主にウィンドウ番号など）
set-option -g status-justify "centre"

# 真ん中(windows-status)の設定
set-window-option -g window-status-format " #I: #W "
set-window-option -g window-status-current-format "#[fg=white,bg=red] #I: #W #[default]"

# 最左に表示(#H => マシン名,#P => ペイン番号)
set-option -g status-left '#H:[#P]'
set-option -g status-left-length 100
set-option -g status-left '#[fg=red,bg=white]#{?client_prefix,#[reverse],} #H[#P] #[default]#(sh ${HOME}/.dotfiles/scripts/git-echo-username-and-email.sh)'
# #[default]#(sh ${HOME}/.dotfiles/scripts/git-echo-username-and-email.sh) git-username-email

# 最右に表示(load average, Wi-Fi、バッテリー残量、現在時刻)
set-option -g status-right-length 0
set-option -g status-right '#(sh ${HOME}/.dotfiles/scripts/git-echo-branch-tmux-current-pane.sh)#(sh ${HOME}/.dotfiles/scripts/get_load_average_tmux.sh)#(sh ${HOME}/.dotfiles/scripts/get_ssid_tmux.sh)#[bg=black,fg=yellow]#(sh ${HOME}/.dotfiles/scripts/get_battery_tmux.sh)#[bg=black,fg=yellow]#[default]#[bg=colour202,fg=colour7] %m/%d(%a)%H:%M '


# ステータスバーの色を設定する
set-option -g status-bg "colour15"
set-option -g status-fg "colour196"


# ------------------------------------------
# マトリックススクリーンセーバー
# 参考：https://qiita.com/yuyuchu3333/items/77889084a1d19223f2b1
# ------------------------------------------
# set -g lock-after-time 600
# set -g lock-command "cmatrix -s -b"

# ------------------------------------------
# 画面設定、分割とか
# 参考：https://qiita.com/b4b4r07/items/01359e8a3066d1c37edc
# ------------------------------------------
# Prefix + Ctrl-h/l でウィンドウ切り替え
# Prefix + Ctrl-h,h,h,h,...と連打できる
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# Prefix+hjkl でペイン移動
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# ペインサイズを上下左右（Prefix+JKHL）に変更
# Prefix+J,J,J,J,...と連打してリサイズ可能
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# Ctrl-o でペインをローテーションしながら移動
# Prefix を用いないのでタイプが楽だが、Ctrl-o を使用してしまう
# 他のソフトウェアの設定に支障をきたさないように注意
bind-key -n C-o select-pane -t :.+

# ウィンドウのインデックスを1から始める
set -g base-index 1
# ペインのインデックスを1から始める
setw -g pane-base-index 1

# pane移動を数字でできるようにする(https://qiita.com/pocari/items/b1828c8aea8e3545cadd)
bind-key C-g display-panes
# set display-panes-time 10000

# 新しいPaneを開く場合
bind c new-window -c '#{pane_current_path}'
# 現在のPaneを水平分割してWindowを開く
unbind %
bind | split-window -h -c '#{pane_current_path}'
# 現在のPaneを垂直分割してWindowを開く
unbind '"'
bind - split-window -v -c '#{pane_current_path}'

# border colours
setw -g window-status-activity-style bg="colour16","underscore",fg="colour45"
set -g pane-border-style fg="colour236"

#マウス操作を有効にする
set-option -g mouse on

# ------------------------------------------
# コピーモード
# 参考：https://qiita.com/chatrate/items/394122d3225ab42ca6f1
# 参考:https://oki2a24.com/2019/04/19/tmux-copy-mode-memo/
# 参考:https://qiita.com/Sho2010@github/items/0ff73d78dae6f6313c1c
# 必要:brew install reattach-to-user-namespace
# ------------------------------------------
# スクロールアップするとコピーモードに入る
bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"

# 最後までスクロールダウンするとコピーモードを抜ける
bind-key -n WheelDownPane select-pane -t= \; send-keys -M

# コピーモードをviに
setw -g mode-keys vi

# クリップボード共有を有効にする
# Prefix + [ でコピーモード。Spaceで選択開始→"c"でクリップボードに保存。Prefix + ] でコピーモード終了。
# for mac
if-shell "uname | grep -q Darwin" \
  'set-option -g default-command "reattach-to-user-namespace -l zsh"'
if-shell "uname | grep -q Darwin" \
  'bind-key -T copy-mode-vi c send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'
# for Linux
# tmuxのbufferとxのclipboardを連携させる
if-shell 'type xsel' \
  "bind-key -T copy-mode-vi c send-keys -X copy-pipe-and-cancel 'xsel -ib'"
if-shell 'type xsel' \
  "bind-key -T copy-mode-vi C send-keys -X copy-pipe 'xsel -ib'"
if-shell 'type xsel' \
  "bind ] run-shell \
    'xsel -ob | xargs -0 -I{} tmux set-buffer -- {} && tmux paste-buffer'"

# 多分ゴミ------------------------------------------
# Prefix + [ でコピーモード。Spaceで選択開始→Enterでクリップボードに保存。
# set-option -g default-command "exec reattach-to-user-namespace -l $SHELL"
# setw -g mode-keys vi
# bind-key    -T copy-mode-vi v     send-keys -X begin-selection
# bind-key    -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind-key    -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind-key    -T copy-mode-vi c send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# 多分ゴミ------------------------------------------

#===================================
# tpm - Tmux Plugin Manager
# https://qiita.com/qqhann/items/5fea753e38a276abf42f
#===================================

# prefix + Iでプラグインをtpmによりインストール
# Plugins
set -g @plugin 'tmux-plugins/tpm'
# tmuxを保存・リストアするプラグイン
set -g @plugin 'tmux-plugins/tmux-resurrect'
# tmux-continuumは保存・リストアを自動化するプラグイン
set -g @plugin 'tmux-plugins/tmux-continuum'

# Initialize TMUX plugin manager 
# (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'

#===================================
# Auto start tmux and restore
#===================================

# auto start terminal
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm'

# auto restore tmux
set -g @continuum-restore 'on'
